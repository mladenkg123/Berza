syntax = "proto3";

option java_multiple_files = true;
option java_package = "rs.raf.pds.v5.z2.gRPC";

service StockExchangeService {



    rpc getStockData(StockRequest) returns (stream StockData) {}
    
    rpc updateFollowedSymbols(FollowedSymbolsRequest) returns (stream StockData) {}
    
    rpc Ask(AskRequest) returns (stream SellOffer) {}
    
    rpc Bid(BidRequest) returns (stream BuyOffer) {}
    
    rpc buy(BuyRequest) returns (BuyResponse) {}
    
    rpc sell(SellRequest) returns (SellResponse) {}
    
    rpc submitOrder(OrderRequest) returns (OrderResponse) {}
        
    rpc generateClientId(GenerateClientIdRequest) returns (stream GenerateClientIdResponse) {}
    
    rpc getCompanyShares(CompanySharesRequest) returns (stream TradingTransaction) {}
    
    
}

message StockData {
    string symbol = 1;
    string companyName = 2;
    double price = 3;
    double change = 4;
    string date = 5;
}

message StockRequest {
    int32 numberOfCompanies = 100;
}


message FollowedSymbolsRequest {
    repeated string symbols = 1;
}

message AskRequest {
    string companySymbol = 1;
    int32 numberOfOffers = 2;
}

message BidRequest {
    string companySymbol = 1;
    int32 numberOfOffers = 2;
}

message SellOffer {
    double price = 1;
    int32 quantity = 2; 
}

message BuyOffer {
    double price = 1;
    int32 quantity = 2; 
}


message BuyRequest {
    string companySymbol = 1;
    double pricePerShare = 2;
    int32 quantity = 3;
    string clientId = 4;
}

message BuyResponse {
    bool success = 1;
    string message = 2;
}

message SellRequest {
    string companySymbol = 1;
    double pricePerShare = 2;
    int32 quantity = 3;
    string clientId = 4;
}

message SellResponse {
    bool success = 1;
    string message = 2;
   
}


message OrderRequest {
	string buyOrSell = 1;
    string companySymbol = 2;
    double pricePerShare = 3;
    int32 quantity = 4;
    string clientId = 5;
}

message OrderResponse {
    bool success = 1;
    string message = 2;
}


message GenerateClientIdRequest {}

message GenerateClientIdResponse {
    string clientId = 1;
    string message = 2;
    int32 balance = 3;
}


message CompanySharesRequest {
    string companySymbol = 1;
    string date = 2; 
}

message TradingTransaction {
    string buyerClientId = 1;
    string sellerClientId = 2;
    string companySymbol = 3;
    double pricePerShare = 4;
    int32 quantity = 5;
    string date = 6;
}
